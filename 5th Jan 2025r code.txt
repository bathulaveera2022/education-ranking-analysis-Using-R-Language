# ============================================
# University Rankings Analysis
# Research Question: How does the quality of education influence university rankings 
# (world rank) between 2012 and 2015?
# Author: [Your Name]
# Date: [Current Date]
# ============================================

# Load required libraries
suppressWarnings({
    library(ggplot2)
    library(dplyr)
    library(tidyr)
})

# Set random seed for reproducibility
set.seed(123)

# Load and examine data
data <- read.csv("H:/assisgnment/hertfordshire assignment/Krishna stoke/Dataset/archive (1)/cwurData.csv")

# Display initial data information
print("First 10 rows of original dataset:")
print(head(data, 10))

# Dataset Structure
print("\nDataset Structure:")
str(data)

# Summary of Original Dataset
print("\nSummary of Original Dataset:")
summary(data)

# Create focused table for study period
data_table <- data %>%
    filter(year >= 2012, year <= 2015) %>%
    select(world_rank, institution, country, quality_of_education, year) %>%
    arrange(year, world_rank) %>%
    head(20)

print("\nFirst 20 rows of data for 2012-2015 (selected columns):")
print(data_table)

# Clean and preprocess data
data_clean <- data %>%
    filter(year >= 2012, year <= 2015) %>%
    drop_na(quality_of_education, world_rank) %>%
    mutate(
        world_rank = as.numeric(world_rank),
        rank_category = factor(cut(world_rank, 
                                   breaks = c(0, 100, 250, 500, 1000),
                                   labels = c("Top 100", "101-250", "251-500", "501+"),
                                   include.lowest = TRUE
        ))
    ) %>%
    filter(between(quality_of_education, 
                   quantile(quality_of_education, 0.25) - 1.5 * IQR(quality_of_education),
                   quantile(quality_of_education, 0.75) + 1.5 * IQR(quality_of_education)
    ))

# Generate yearly statistics
summary_by_year <- data_clean %>%
    group_by(year) %>%
    summarise(
        mean_world_rank = mean(world_rank),
        mean_quality_education = mean(quality_of_education),
        correlation = cor(quality_of_education, world_rank, method = "spearman"),
        .groups = 'drop'
    )

print("\nSummary Statistics by Year:")
print(summary_by_year)

# Create scatter plot
scatter_plot <- ggplot(data_clean, aes(x = quality_of_education, y = world_rank)) +
    geom_point(aes(color = factor(year)), alpha = 0.6) +
    geom_smooth(method = "lm", formula = y ~ x, se = TRUE) +
    scale_y_reverse() +
    facet_wrap(~year) +
    labs(
        title = "Quality of Education vs World Ranking (2012-2015)",
        subtitle = "Higher Quality Score â†’ Better (Lower) Rank",
        x = "Quality of Education Score",
        y = "World Ranking Position (1 = highest ranked)",
        color = "Year",
        caption = "Source: CWUR Dataset"
    ) +
    theme_minimal() +
    theme(
        plot.title = element_text(hjust = 0.5, face = "bold", size = 14),
        plot.subtitle = element_text(hjust = 0.5, size = 12),
        axis.title = element_text(size = 11)
    )

# Save scatter plot
ggsave("scatter_plot_by_year.png", scatter_plot, width = 12, height = 8, dpi = 300)

# Create histogram for world rankings distribution
hist_plot <- ggplot(data_clean, aes(x = world_rank)) +
    geom_histogram(aes(y = after_stat(density)), 
                  bins = 30, 
                  fill = "lightblue", 
                  color = "darkblue", 
                  alpha = 0.7) +
    geom_density(color = "red", 
                linewidth = 1) +
    facet_wrap(~year) +
    labs(
        title = "Distribution of University World Rankings (2012-2015)",
        subtitle = "With Normal Distribution Curve Overlay",
        x = "World Ranking Position (1 = highest ranked)",
        y = "Density",
        caption = "Source: CWUR Dataset"
    ) +
    theme_minimal() +
    theme(
        plot.title = element_text(hjust = 0.5, face = "bold", size = 14),
        plot.subtitle = element_text(hjust = 0.5, size = 12),
        axis.title = element_text(size = 11)
    )

# Save histogram
ggsave("histogram_worldrank.png", hist_plot, width = 12, height = 8, dpi = 300)

# Create histogram for quality of education distribution
edu_hist_plot <- ggplot(data_clean, aes(x = quality_of_education)) +
    geom_histogram(aes(y = after_stat(density)), 
                  bins = 30, 
                  fill = "lightgreen", 
                  color = "darkgreen", 
                  alpha = 0.7) +
    geom_density(color = "red", 
                linewidth = 1) +
    facet_wrap(~year) +
    labs(
        title = "Distribution of Quality of Education Scores (2012-2015)",
        subtitle = "With Normal Distribution Curve Overlay",
        x = "Quality of Education Score",
        y = "Density",
        caption = "Source: CWUR Dataset"
    ) +
    theme_minimal() +
    theme(
        plot.title = element_text(hjust = 0.5, face = "bold", size = 14),
        plot.subtitle = element_text(hjust = 0.5, size = 12),
        axis.title = element_text(size = 11)
    )

# Save education histogram
ggsave("histogram_education.png", edu_hist_plot, width = 12, height = 8, dpi = 300)

# Statistical Analysis

# Shapiro-Wilk Normality Test
shapiro_test <- shapiro.test(data_clean$world_rank)
print("\nShapiro-Wilk Normality Test Results:")
print(shapiro_test)

# Correlation analysis by year
cor_by_year <- data_clean %>%
    group_by(year) %>%
    summarise(
        correlation = cor(quality_of_education, world_rank, method = "spearman"),
        p_value = cor.test(quality_of_education, world_rank, 
                           method = "spearman", exact = FALSE)$p.value,
        .groups = 'drop'
    )

print("\nCorrelation Analysis by Year:")
print(cor_by_year)

# Regression analysis
model <- lm(world_rank ~ quality_of_education + factor(year), data = data_clean)

# Create diagnostic plots
png("model_diagnostics.png", width = 1200, height = 1200, res = 150)
par(mfrow = c(2, 2))
plot(model)
dev.off()

# Create regression summary
model_summary <- summary(model)
coef_table <- as.data.frame(coef(summary(model)))
colnames(coef_table) <- c("Estimate", "Std_Error", "t_value", "p_value")
write.csv(coef_table, "regression_summary.csv")

# Print final results
cat("\nComprehensive Analysis Results:\n")
cat("====================================\n")

# Normality Test
cat("1. Data Distribution Analysis:\n")
cat("   - Normality Test: ", ifelse(shapiro_test$p.value > 0.05, 
                                    "Data appears normally distributed", 
                                    "Data does not appear normally distributed"), "\n")
cat("   - Shapiro-Wilk p-value:", format.pval(shapiro_test$p.value), "\n\n")

# Correlation Analysis by Year
cat("2. Correlation Analysis by Year:\n")
print(cor_by_year)

# Regression Model Performance
cat("\n3. Regression Model Performance:\n")
cat("   - R-squared:", round(summary(model)$r.squared, 4), "\n")
cat("   - Adjusted R-squared:", round(summary(model)$adj.r.squared, 4), "\n")
cat("   - F-statistic:", round(summary(model)$fstatistic[1], 2), "\n")

# Full Regression Model Summary
cat("\nFull Regression Model Summary:\n")
print(summary(model))
